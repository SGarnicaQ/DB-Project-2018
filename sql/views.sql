USE ProyectoDB;
--
-- VISTAS BASICAS
--

-- 1

CREATE OR REPLACE VIEW `Docentes que hayan cursado un programa en los ultimos 3 anos` AS
SELECT DISTINCT APELLIDO_DOC AS Apellidos, NOMBRE_DOC AS Nombre
FROM DOCENTE NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN PROGRAMA
WHERE YEAR(FECHA_INICIO) > YEAR(CURDATE())-3
ORDER BY Apellidos;

-- 2

CREATE OR REPLACE VIEW `Docentes que tengan incrito un programa en el extranjero` AS
SELECT DISTINCT APELLIDO_DOC AS "Apellidos", NOMBRE_DOC AS "Nombre", TEMA AS "Programa",NOMBRE_PAIS AS "Pais"
FROM ((((DOCENTE NATURAL JOIN PROGRAMA_DOCENTE) NATURAL JOIN PROGRAMA ) NATURAL JOIN INSTITUCION )NATURAL JOIN CIUDAD NATURAL JOIN PAIS)
WHERE COD_PAIS<>'COL'
ORDER BY APELLIDO_DOC, TEMA;

-- 3

CREATE OR REPLACE VIEW `Docentes que tengan inscrito el programa Aalborg` AS
SELECT DISTINCT NOMBRE_DOC AS "Nombre", APELLIDO_DOC AS "Apellidos"
FROM ((DOCENTE NATURAL JOIN PROGRAMA_DOCENTE) NATURAL JOIN PROGRAMA)
WHERE TEMA = 'Aalborg';

-- 4

CREATE OR REPLACE VIEW `Correo docentes con programa de extension/pedagogia` AS
SELECT DISTINCT Correo_inst AS "Correo institucional"
FROM (((((DOCENTE NATURAL JOIN PROGRAMA_DOCENTE) NATURAL JOIN PROGRAMA ) NATURAL JOIN TIPO_DOCENTE) NATURAL JOIN ENFOQUE) NATURAL JOIN TIPO_PROGRAMA)
WHERE Nombre_enfoque = 'Pedagogia' AND  Nombre_tipo_prog = 'Extension' AND NOMBRE_TIPO_DOC = 'Planta';

-- 5

CREATE OR REPLACE VIEW `Docentes con programas inscritos que aun no han visto` AS
SELECT DISTINCT NOMBRE_DOC AS "Nombre", APELLIDO_DOC AS "Apellidos"
FROM ((DOCENTE NATURAL JOIN PROGRAMA_DOCENTE) NATURAL JOIN PROGRAMA)
WHERE FECHA_INICIO > CURDATE();

-- 6
CREATE OR REPLACE VIEW `Docentes de Sistemas e Industrial en un programa` AS
SELECT DISTINCT  NOMBRE_DOC AS Nombre, APELLIDO_DOC AS 
Apellido
		FROM DOCENTE NATURAL JOIN PROGRAMA_DOCENTE NATURAL
JOIN PROGRAMA NATURAL JOIN INSTITUCION NATURAL JOIN 
CIUDAD NATURAL JOIN PAIS NATURAL JOIN TIPO_DOCENTE 
NATURAL JOIN DEPARTAMENTO
WHERE Nombre_dep = 'Sistemas e Industrial' AND COD_PAIS = 'COL' 
AND  Nombre_tipo_doc = 'Planta';

-- 7

CREATE OR REPLACE VIEW `Docentes de Sistemas e Industrial en un programa` AS
SELECT NOMBRE_DOC AS 'Nombre decente'
FROM INSTITUCION NATURAL JOIN PROGRAMA NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN DOCENTE NATURAL JOIN TIPO_DOCENTE
WHERE NOMBRE_TIPO_DOC = 'Ocasional' AND NOMBRE_INSTIT = 'Universidad de los Andes'
UNION
(SELECT NOMBRE_DOC
FROM INSTITUCION NATURAL JOIN PROGRAMA NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN DOCENTE NATURAL JOIN TIPO_DOCENTE
WHERE COSTO < 1200000 AND NOMBRE_TIPO_DOC = 'Ocasional');


-- 8

CREATE OR REPLACE VIEW DOC_GOO AS
SELECT DISTINCT  NOMBRE_DOC AS Nombre_doc
FROM DOCENTE NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN PROGRAMA NATURAL JOIN INSTITUCION
WHERE NOMBRE_INSTIT = 'GOOGLE'; 

CREATE OR REPLACE VIEW DOC_HARV AS
SELECT DISTINCT  NOMBRE_DOC AS Nombre_doc
FROM DOCENTE NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN PROGRAMA NATURAL JOIN INSTITUCION
WHERE NOMBRE_INSTIT = 'Harvard'; 
	
CREATE OR REPLACE VIEW `Docentes que han visto programas Google/Harvard` AS
SELECT DISTINCT  DOC_GOO.Nombre_doc
FROM DOC_GOO INNER JOIN DOC_HARV
USING(Nombre_doc); 

--9
CREATE OR REPLACE VIEW ALL_DOC_1 AS
SELECT DISTINCT  NOMBRE_DOC , NOMBRE_INSTIT
FROM DOCENTE NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN PROGRAMA NATURAL JOIN INSTITUCION;

CREATE OR REPLACE VIEW ALL_DOC_2 AS
SELECT DISTINCT NOMBRE_INSTIT
FROM INSTITUCION
WHERE COD_PAIS = 'COL';

CREATE OR REPLACE VIEW `Docentes, en todas las instituciones de Colombia` AS
SELECT ALL_DOC_1.Nombre_doc AS "Nombre Docente"
FROM ALL_DOC_1
WHERE ALL_DOC_1.NOMBRE_INSTIT IN(
	SELECT ALL_DOC_2.NOMBRE_INSTIT
	FROM ALL_DOC_2)
GROUP BY ALL_DOC_1.Nombre_doc
HAVING COUNT(*)=(
	SELECT COUNT(*)
	FROM ALL_DOC_2);


-- 10
CREATE OR REPLACE VIEW CIUDADES_COL AS
SELECT DISTINCT  Nombre_ciudad AS Ciudad
FROM PAIS NATURAL JOIN CIUDAD 
WHERE cod_pais = 'COL';

CREATE OR REPLACE VIEW CIUDADES_COL_PROG AS
SELECT DISTINCT  Nombre_ciudad AS Ciudad
FROM PAIS NATURAL JOIN CIUDAD NATURAL JOIN INSTITUCION NATURAL JOIN PROGRAMA
WHERE cod_pais = 'COL';

CREATE OR REPLACE VIEW `Ciudades de colombia que no ofrecen programas` AS
SELECT CIUDADES_COL.Ciudad
FROM CIUDADES_COL LEFT JOIN CIUDADES_COL_PROG ON CIUDADES_COL.Ciudad=CIUDADES_COL_PROG.Ciudad
WHERE CIUDADES_COL_PROG.Ciudad IS NULL;


--FUNCIONES AGREGADAS --> 2 HAVING
--1

CREATE OR REPLACE VIEW `Cantidad de dinero invertido por dep. Mayor a 5.2M` AS 
SELECT NOMBRE_DEP AS "NOMBRE DEPARTAMENTO", SUM(COSTO) AS DINERO_INVERTIDO
FROM DEPARTAMENTO NATURAL JOIN DOCENTE NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN PROGRAMA
GROUP BY NOMBRE_DEP
HAVING DINERO_INVERTIDO > 5200000;

--2

CREATE OR REPLACE VIEW `Cantidad de programas acreditados por pais` AS
SELECT NOMBRE_PAIS, COUNT(NOMBRE_PAIS) AS CANTIDAD
FROM PROGRAMA NATURAL JOIN INSTITUCION NATURAL JOIN CIUDAD NATURAL JOIN PAIS
WHERE ACREDITACION = 1
GROUP BY NOMBRE_PAIS;

--3

CREATE OR REPLACE VIEW `Promedio invertido por Docentes Ocasionales` AS
SELECT ROUND(AVG(COSTO), 2) AS PROMEDIO
FROM TIPO_DOCENTE NATURAL JOIN DOCENTE NATURAL JOIN PROGRAMA_DOCENTE NATURAL JOIN PROGRAMA
WHERE NOMBRE_TIPO_DOC = 'Ocasional';

--4

CREATE OR REPLACE VIEW COSTO_PROMEDIO_COL AS
SELECT AVG(COSTO) AS Promedio
FROM PROGRAMA NATURAL JOIN INSTITUCION NATURAL JOIN CIUDAD NATURAL JOIN PAIS
WHERE cod_pais = 'COL';

CREATE OR REPLACE VIEW COSTO_PROMEDIO_EU AS
SELECT AVG(COSTO) AS Promedio
FROM PROGRAMA NATURAL JOIN INSTITUCION NATURAL JOIN CIUDAD NATURAL JOIN PAIS
WHERE cod_pais = 'USA';

CREATE OR REPLACE VIEW `Relacion porcentual entre el costo promedio de COL y USA` AS
SELECT ROUND(COSTO_PROMEDIO_COL.Promedio/COSTO_PROMEDIO_EU.Promedio*100, 2) AS "Relacion Porcentual"
FROM COSTO_PROMEDIO_COL, COSTO_PROMEDIO_EU;



--5

CREATE OR REPLACE VIEW `Cantidad de Programas por Innstitucion, con cantidad > 2` AS
SELECT NOMBRE_INSTIT AS Institucion, COUNT(*) AS Cantidad
FROM INSTITUCION NATURAL JOIN PROGRAMA
WHERE YEAR(FECHA_FINALIZACION) >= 2018 AND YEAR(FECHA_INICIO) <= 2019
GROUP BY NOMBRE_INSTIT
HAVING Cantidad >= 2;


-- ANIDADAS
-- 1

CREATE OR REPLACE VIEW PAIS_NO_CURSOS AS
SELECT DISTINCT NOMBRE_PAIS
FROM PAIS
WHERE NOMBRE_PAIS NOT IN (
	SELECT NOMBRE_PAIS
	FROM ((PAIS NATURAL JOIN CIUDAD) NATURAL JOIN INSTITUCION));

--2

CREATE OR REPLACE VIEW DOCENTE_NO_DOCENTE AS
SELECT NOMBRE_DOC
FROM DOCENTE
WHERE NOMBRE_DOC NOT IN (
			SELECT NOMBRE_DOC
			FROM ((DOCENTE NATURAL JOIN PROGRAMA_DOCENTE) NATURAL JOIN PROGRAMA));

--3

CREATE OR REPLACE VIEW `Departamentos sin docentes` AS
SELECT DISTINCT NOMBRE_DEP
FROM DEPARTAMENTO NATURAL JOIN DOCENTE;
----WHERE EXISTS (
	--SELECT NOMBRE_DEP FROM DEPARTAMENTO
	--);

CREATE OR REPLACE VIEW DBA_UN AS
SELECT NOMBRE_DOC, COUNT(*) AS CUENTA
FROM ((((DOCENTE NATURAL JOIN DEPARTAMENTO) NATURAL JOIN PROGRAMA_DOCENTE) NATURAL JOIN PROGRAMA) NATURAL JOIN TIPO_PROGRAMA)
WHERE NOMBRE_DEP = 'Sistemas e Industrial' AND Nombre_tipo_prog = 'Formacion' AND YEAR(FECHA_FINALIZACION) > 17
GROUP BY NOMBRE_DOC
HAVING CUENTA > 2;
